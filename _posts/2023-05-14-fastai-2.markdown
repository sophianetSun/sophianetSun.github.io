---
layout: post
title: "fastai와 파이토치가 만나 꽃피운 딥러닝 2장"
date: 2023-05-14 22:41:00 +0900
categories: ml
---

원제 [Deep Learning for Coders with fastai & PyTorch][fastai]의 영어로 된 버전은 해당 페이지에서 무료로 볼 수 있다. 하지만 방대한 언어의 압박에도 2장까지 꾸역꾸역 보고 있었는데, 최근 [허깅페이스][hg] 튜토리얼을 통해 기계번역 모델을 훈련해보다가 맨붕이 오게되어, 결국 한국어판을 통해 공부하게 되었다.

본 책은 지금까지 사서 책장에 꽂아놨던 많은 머신러닝, 딥러닝 책들과는 달리 대놓고 수학과 이론을 최대한 자제하겠노라고 표방하고 있다. 주 저자 중 하나인 제레미 선생은 심지어 철학 전공의 머신러닝 대가이다. 때문에 지금까지 1장까지 열심히 보다가 수학 공식이 나오며 책을 덮은 책장의 다른 책들과는 달리 아직까지는 수월하게 페이지를 넘기고 있다.

1장에서는 저자의 소개와, 사람들이 딥러닝에 대해 가지고 있는 편견.

- 뛰어난 수학 지식이 필요하다
- 많은 양의 데이터가 필요하다
- 고가의 컴퓨터가 필요하다
- 박사 학위가 필요하다

같은 내용들에 반박하며, 전반적인 공부방법과 머신러닝, 딥러닝에 대한 개론과 학습에 필요한 환경과 제반 지식들에 대해 소개하고 있다.

1~3장 까지는 개론적인 이야기 이므로 디테일한 내용은 4장부터 시작한다는 설명이 이어졌지만, 허깅페이스 튜토리얼에서 한번 데인 상황이기에 건너뛰지 않고, 천천히 접근하기로 했다.

이야기 할 2장에서는 모델에서 제품까지라는 제목으로 딥러닝의 개발부터 배포까지의 전과정을 간략하게 보여주고 있다. 배움이나 일을 하는데 있어 저자의 철학의 담긴 방식으로, 가장 넓은 시야에서 일의 처음부터 끝을 빠르게 보여주는 방법으로 철학과 출신다운 방식이라고 할 수 있겠다. _요즘엔 애자일 방법론이나 테스트 주도 개발로도 많이 불리고 있는 방식이고, 개인적으로도 이런 방법이 뭔가 빠르게 파악하는데 좋다고 생각을 하고 있다. 하지만 전형적으로 개발자들이 일에 접근하는 방식과는 좀 반대라고 할까나_

어플리케이션 이나 서비스 제공에 있어서 딥러닝 모델을 개발하고 배포하는 것은 작은 일부분에 해당한다는 점을 이야기 하고 있는데, Ai 모델을 활용하는 회사에서 일했던 플랫폼을 개발했던 웹 개발자로서 매우 공감가는 부분이었다.

회사에서 일하면서도, 주 서비스 였던 Ai 모델이 잘 되지 않으면 업무에 별로 진척이 되지 않는 상황 많았었는데, 전체 개발 과정에서 볼 때에는 작은 부분인데, 이때문에 전체 개발 상황이 좌지우지 되는 것들이 좀 많이 답답했었다.

물론 그 모델이 안된다면 애플리케이션이나 서비스 자체가 말이 안되는 상황이기 때문이겠지만, 딥러닝에 관여하지 않는 개발자로서는 좀 답답했던 부분도 있었더랬다.

딥러닝 앱의 전과정인 데이터의 수집 - 정제 - 모델 훈련 - 배포 - 피드백 까지 전과정을 이야기 하고 있으며, 학습 방법의 일환으로 기술적 글쓰기를 이야기하며 블로그 작성을 숙제로 내주고 있다.

벌써 책이 나온지 몇 년이 지났기 때문에 웹 버전의 동영상에서 업데이트 된 부분이 몇가지 있는데, 이미지 수집을 위해 bing 검색의 이미지 서치를 사용하던 부분이 덕덕고 api를 사용하였고, 모델 배포를 위해 주피터 노트북의 확장 기능 및 서비스를 이용하던 것에서 [허겅페이스 스페이스](https://huggingface.co/spaces)나 [gradio](https://gradio.app/) 서비스를 이용하는 것이 변경 점이라고 할 수 있겠다.

거기에 블로그 툴로 주피터 노트북의 기능을 이용하는 [fastpage](https://github.com/fastai/fastpages)가 deprecated라 [Quarto](https://quarto.org/)를 이용하라는 점은 덤.

마지막에 질문지를 한 번 작성해보자.

1. 현재 텍스트 모델의 심각한 결함은 무엇인가요?

기존의 글을 모방해 글을 작성함으로 정답이 아닌 내용을 정답인 것처럼 작성할 수 있다. 특히 정보 전달에 관한 내용인 경우 완전히 틀린 내용을 비전문가들이 설득할만한 내용으로 생성할 수 있기에 위험하다.

이 책이 쓰여질 때에는 ChatGPT가 발표되기 전이었지만, ChatGPT가 발표되고 사람들이 많이 사용하게 된 현재 상황에서 ChatGPT를 사용해 잘못된 정보(시간에 흐름에 따라 변하는 상황이나, 애초에 잘못된 내용이 학습된)가 제공되는 것을 직접적으로 발표했다.

2. 텍스트 생성 모델이 줄 수 있는 사회적인 부정적 영향은 무엇인가요?

또한 책에서 이야기 하고 있는 부분은, 소셜미디어를 통해 악의적인 댓글들이 허위 정보를 전파하고, 불안감과 갈등을 조장하는 내용을 엄청나게 많이 생성하고 있는데, 텍스트 모델을 악용해 그럴듯하게 이런 글들을 양산해 낼 수 있다는 점을 지적하고 있다.

3. 모델이 실수할 수 있고 그런 실수가 해로울 수 있는 상황에서 과정을 자동화하는 것에 좋은 대안은 무엇인가요?

만들어진 모델을 이용해 바로 의사 결정에 도입하거나 시스템에 도입하지 않고, 단계를 나누어 모델을 도입하는 것인데, 세가지 단계로 나누고 있다.

첫번째는 수동으로 모델의 결과를 하나하나 사람이 평가해 시도한 아이디어가 제대로 작동하는지 평가하는 과정을 거치는 것이다. 물론 초기 단계이므로 여러가지 아이디어를 적용한 모델을 동시에 평가할 수도 있고, 평가과정에서 문제를 찾아내 개선된 아이디어를 적용할 수도 있다.

실제 딥러닝 모델을 사용해 업무를 진행하는 것을 보면, 이 절차가 어느정도 적용되는 것을 볼 수 있었는데, 컴퓨터 비전 검사를 통해 제품의 불량을 찾아내는 딥러닝 모델을 만들 때, 조명의 밝기, 촬영하는 각도와 범위 등 여러가지 가정을 이런 저런 테스트를 해보며 결과를 사람이 평가하는 과정을 거쳤더랬다.

두번째 단계는 첫번째 단계를 통과한 모델을 제한적인 범위에서 적용하되, 결과를 완전히 신뢰하지 않고 사람이 평가하는 과정을 거치는 것이다.

세번째로는 범위를 점진적으로 확정하되, 결과에 대한 피드백을 자동화하고, 문제가 보이는 상황에서 즉각적으로 반응할 수 있도록 모니터링을 체계화 하는 과정이 반드시 필요하다고 얘기한다.

4. 어떤 종류의 테이블 데이터에서 딥러닝이 특히 잘 작동하나요?

테이블 데이터-엑셀같은 표 형식-는 이미 기존의 머신러닝 모델로도 잘 작동되고 있고, 딥러닝으로 교체한다고 크게 개선되는 상황은 아니라고 한다. 하지만 기존의 방법에서는 숫자나 정해진 값 등의 한정적인 데이터를 주로 사용했다면 딥러닝 모델을 도입하면 자연어나 우편번호 같이 정해지지 않은 범주의 값들을 포함할 수 있는 장점이 생긴다.

5. 추천 시스템에 딥러닝 모델을 직접적으로 사용할 때 불리한 점은 무엇인가요?

사용자가 도움이 되는 것을 추천해 주는 것이 아니라, 사용자가 좋아할 만한 상품을 추천해준다는 단점. 상품 추천이라고 한다면 사용자가 이미 알고 있거나, 이미 구매한 상품의 포장만 바뀌는 것들을 추천해주는 그런 문제점이 있다.

6. 원동력 접근법을 구성하는 단계는 무엇인가요?

실행할 수 있는 결과물을 만드는 것을 목표로 한다.

- 결과에 대한 목표 설정
- 목표 달성을 위해 어떤 레버(수단, 방법)을 쓸 것인가를 고려
- 레버를 작동시키는데 필요한 데이터를 고려

7. 원동력 접근법 단계를 추천 시스템에 어떻게 연관시킬 수 있을까요?

- 목적: 고객에게 유용하지만, 추천 없이는 구매하지 않을 만한 상품을 추천하여 추가 구매를 이끌어내는 것
- 레버: 추천의 순위 매기기
- 데이터: 새로운 판매로 이어지는 데이터를 수집

8. 직접 수집한 데이터를 사용해서 이미지 인식 모델을 만들고, 웹에 배포해보세요.

기타의 모델을 분류하는 이미지 인식 모델을 만들어보자. 펜더의 스트라토캐스터와 깁슨의 레스폴

9. DataLoaders란 무엇인가요?

데이터를 제공하는 DataLoader 클래스들을 저장하는 역할을 하는 객체. 보통 훈련용과 검증용 두개로 저장하게 됨.

10. DataLoaders를 생성할 때 fastai에 알려줘야 하는 네 가지는 무엇인가요?

> 1. 작업 데이터의 유형
> 2. 데이터 목록을 가져오는 방법
> 3. 각 데이터에 레이블을 지정하는 방법
> 4. 검증용 데이터 셋을 만드는 방법

11. DataBlock의 splitter 인자의 역할은 무엇인가요?

제공한 데이터를 훈련용과 검증용으로 나누는 비율과 임의 추출할 인자(seed)값.

12. 무작위 분할이 항상 같은 검증용 데이터셋을 선택하게 하려면 어떻게 해야 하나요?

일정한 seed 값을 제공하면 됨.

13. 종속변수와 독립변수를 나타내는 데 사용되는 문자는 무엇인가요?

보통 종속변수(데이터)는 x로 독립변수(레이블)는 y로 표현.

14. 이미지 자르기, 패딩, 크기 조절은 서로 어떻게 다른가요? 각각 어떤 상황에 더 적합한가요?

이미지 자르기는 데이터 입력에 필요한 부분만 자르고 나머지 부분은 버리는 작업, 패딩은 너비와 높이 중 더 큰 부분을 기준으로 이미지를 비율대로 줄이고, 남은 여백을 임의의 값(보통 검은색)으로 채우는 것, 크기 조절은 긴쪽을 찌그러뜨리거나 짧은 쪽을 늘려 이미지 크기를 맞추는 작업.

15. 데이터 증강의 개념과 필요한 이유는 무엇일까요?

사진이 대상을 표현하는데, 사진 마다 약간씩 다른 특징을 포현하게 되는데 이를 반영하여 학습해 모델이 적용될 때 다양한 이미지의 표현을 알아채게 끔 할 수 있다.

16. 스타일이나 구조가 다른 학습용 데이터 때문에 분류 모델이 잘 작동하지 않은 예를 들어보시오.
17. item_tfms와 batch_tfms의 차이는 무엇인가요?

item_tfms은 데이터 각각에 적용될 함수, batch_tfms은 여러 데이터 그룹에 한번에 적용될 함수

18. 오차 행렬이란 무엇인가요?

레이블과 예측에 대한 오차를 행렬로 표현한 것.

19. export는 무엇을 저장하나요?

모델의 구조와 그 파라미터. 데이터 로드 방법.

20. 학습 대신 예측을 얻는 데 모델을 사용하는 것을 뭐라고 부르나요?

추론(Inference).

21. IPython 위젯이란 무엇인가요?

주피터 노트북의 UI 컴포넌트

22. 모델 배포에서 언제 CPU를 사용하면 좋을까요? 그리고 GPU는 어떤 상황에서 더 좋을까요?

대부분의 상황에서 좋고, 일반적으로 추론 작업이 사용자의 입력에 의해 하나씩 실행될 때 좋다. 배포 환경의 유지 관리 및 비용 측면에서도 좋다.
GPU의 경우 대량의 입력이 있고, 이에 대한 빠른 응답이 필요할 때 사용된다.

23. 앱을 스마트폰이나 PC와 같은 클라이언트/에지 장치 대신, 서버로 배포할 때의 단점은 무엇인가요?

서버에 부하를 줄 수 있고, 입력된 데이터에 대한 관리와 보안이 필요하다.

24. 곰 경고 시스템을 실제로 배치할 때 발생할 만한 문제의 세 가지 예는 무엇인가요?

학습은 이미지에 대해 했지만, 실제로는 비디오 데이터에 대해 처리해야 함.
학습 데이터셋에 포함되지 않은 야간 데이터, 곰의 일부가 나무 등에 가린 불분명한 데이터를 처리해야 함.
저해상도 카메라 이미지를 처리해야 함.

25. 영역 밖 데이터란 무엇인가요?

데이터셋에 포함되지 않은 실제 상황에서 발생되는 데이터.

26. 도메인 시프트란 무엇인가요?

시간과 환경에 변화에 따라 데이터가 변해, 모델을 학습할 때 생성한 데이터와 변화되는 것.

27. 세 가지 배포 처리 단계는 각각 무엇인가요?

> 1. 수동적 과정
> 2. 제한된 범위의 배포
> 3. 점진적 확장

[fastai]: https://course.fast.ai/
[hg]: https://huggingface.co
